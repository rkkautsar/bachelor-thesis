\makeatletter
\tikzset{
    database/.style={
        path picture={
            \draw (0, 1.5*\database@segmentheight) circle [x radius=\database@radius,y radius=\database@aspectratio*\database@radius];
            \draw (-\database@radius, 0.5*\database@segmentheight) arc [start angle=180,end angle=360,x radius=\database@radius, y radius=\database@aspectratio*\database@radius];
            \draw (-\database@radius,-0.5*\database@segmentheight) arc [start angle=180,end angle=360,x radius=\database@radius, y radius=\database@aspectratio*\database@radius];
            \draw (-\database@radius,1.5*\database@segmentheight) -- ++(0,-3*\database@segmentheight) arc [start angle=180,end angle=360,x radius=\database@radius, y radius=\database@aspectratio*\database@radius] -- ++(0,3*\database@segmentheight);
        },
        minimum width=2*\database@radius + \pgflinewidth,
        minimum height=3*\database@segmentheight + 2*\database@aspectratio*\database@radius + \pgflinewidth,
    },
    database segment height/.store in=\database@segmentheight,
    database radius/.store in=\database@radius,
    database aspect ratio/.store in=\database@aspectratio,
    database segment height=0.1cm,
    database radius=0.25cm,
    database aspect ratio=0.35,
}
\makeatother

\tikzstyle {block} = [draw, text width=4cm, minimum height=1cm, align=center]
\tikzstyle {miniblock} = [draw=gray, dashed, text width=3cm, inner sep=1ex]

\begin{tikzpicture}
    \node [block] (bootstrapper) {Bootstrapper};
    \node [block, below=of bootstrapper] (manager) {Manager};
    \node [block, below=1.5cm of manager, inner sep=0pt] (worker) {
        \begin{tikzpicture}
            \matrix [row sep=1em] {
                \node {Worker}; \\
                \node [miniblock] {\footnotesize Collect System Info}; \\
                \node [miniblock] {\footnotesize Execute run}; \\
                \node [miniblock] {\footnotesize Validate result}; \\
                \node {\dots}; \\
            };
        \end{tikzpicture}
    };
    \draw [-latex'] (manager) -- (worker) node [midway, fill=white] {manages};

    \node [block, right=3cm of bootstrapper, inner sep=0pt] (server) {
        \begin{tikzpicture}
            \matrix [row sep=1em] {
                \node {Server}; \\
                \node [miniblock, outer sep=2ex] {\footnotesize Store system info}; \\
                \node [miniblock, outer sep=2ex] {\footnotesize Store run statistics}; \\
                \node {\dots}; \\
            };
        \end{tikzpicture}
    };
    \node[database,database radius=0.5cm,database segment height=0.3cm, below=of server] (database) {};
    \node [right=0.1cm of database] {\rotatebox{-90}{Database}};
    \node [block, below=of database, inner sep=0pt] (analyzer) {
        \begin{tikzpicture}
            \matrix [row sep=1em] {
                \node {Analyzer}; \\
                \node [miniblock] {\footnotesize Summarize runtime}; \\
                \node [miniblock] {\footnotesize Cactus plot}; \\
                \node {\dots}; \\
            };
        \end{tikzpicture}
    };
    \draw (server) -- (database);
    \draw (database) -- (analyzer);

    \draw [-latex'] (bootstrapper) -- (server) node [midway, fill=white] {$R \in C \times I$};
    \path [-latex', transform canvas={yshift=0.2cm}] (server) edge node [sloped, above, pos=0.33, fill=white] {$(c,i) \in R$} (worker);
    \path [-latex', transform canvas={yshift=-0.2cm}] (worker) edge node [sloped, below, pos=0.33, fill=white] {reports to} (server);

    \begin{scope}[on background layer]
        \node[draw=red!50, dashed, inner sep=1ex, label=above:\sffamily\textsc{client-side},  rounded corners, fit=(bootstrapper)(manager)(worker)] (clientenv) {};
        \node[draw=blue!50, dashed, inner sep=1ex, label=above:\sffamily\textsc{server-side},  rounded corners, fit=(server)(database)(analyzer)] (serverenv) {};
        \path [draw=black!30, dashed] ([xshift=-1.5cm] serverenv.north west) edge node [sloped, near end, text=black!60, fill=white] {TCP} ([xshift=-1.5cm] serverenv.south west);
    \end{scope}

\end{tikzpicture}
